{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","fetch","encodeURI","peticion","json","data","gifs","map","gif","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAjBmB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAQC,GAAR,qBAAAC,EAAA,4DACN,mCADM,SAEEC,MAAM,+CAAD,OADb,mCACa,cAA+DC,UAAWH,GAA1E,aAFP,cAEfI,EAFe,gBAGEA,EAASC,OAHX,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAK,SAAEC,GAAU,IAAD,EAChC,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QARjB,kBAWdL,GAXc,4CAAH,sDCCPQ,EAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEvC,OACE,sBAAKI,UAAU,yCAAf,UACE,qBAAKC,IAAKL,EAAKM,IAAMP,IACrB,4BAAIA,QCHGQ,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAEvB,ECH0B,SAAEA,GAC5B,MAA0Bd,mBAAS,CACjCoB,KAAM,GACNc,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACTxB,EAAQC,GACLwB,MAAM,SAAAC,GACLH,EAAS,CACPhB,KAAMmB,EACNL,SAAS,SAGd,CAAEpB,IAEEqB,EDb0BK,CAAc1B,GAAlCa,EAAb,EAAQP,KAAac,EAArB,EAAqBA,QAErB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,8BACb,qBAAKA,UAAU,YAAf,SAEMH,EAAOL,KAAK,SAACmB,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIjB,aEQrBkB,EAnBc,WAE3B,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEI4C,EAAWrB,KAAK,SAAAR,GAAQ,OAAK,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCVrD8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.806c1619.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputValue = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if ( inputValue.trim().length > 2) {\r\n      setCategories( cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={ handleInputValue }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async ( category ) => {\r\n  const apiKey = 'yyxlu7IzYd9JQzoCBCm5Pl93L2y7haSe'\r\n  const peticion = await fetch(`http://api.giphy.com/v1/gifs/search?api_key=${ apiKey }&q=${ encodeURI( category ) }&limit=5`)\r\n  const { data } = await peticion.json();\r\n  const gifs = data.map( ( gif ) => {\r\n    return {\r\n      id: gif.id,\r\n      title: gif.title,\r\n      url: gif.images?.downsized_medium.url\r\n    }\r\n  })\r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n  \r\n  return (\r\n    <div className='card animate__animated animate__bounce'>\r\n      <img src={url} alt={ title }></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n  const { data:images, loading } = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__bounce'>{ category }</h3>\r\n      { loading && <p className='animate__animated animate__flash'> Cargando datos </p>}\r\n      <div className='card-grid'>\r\n          { \r\n            images.map( (img) => (\r\n              <GifGridItem key={img.id} {...img}/>\r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect( () => {\r\n    getGifs(category)\r\n      .then( imgs => {\r\n        setstate({\r\n          data: imgs,\r\n          loading: false\r\n        })\r\n      })\r\n  }, [ category ])\r\n\r\n  return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp =  () => {\r\n\r\n  const [categories, setCategories] = useState(['One punch']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories }/>\r\n      <hr />\r\n      <ol>\r\n        { \r\n          categories.map( category => (<GifGrid key={category} category={category}/>) )\r\n        }\r\n      </ol>\r\n        \r\n    </>\r\n  )\r\n\r\n}\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n "],"sourceRoot":""}